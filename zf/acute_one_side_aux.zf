# $Id$

include "tarski_def.zf".
include "tarski_perp.zf".
include "tarski_conga.zf".
include "tarski_col.zf".
include "tarski_col_bis.zf".
include "tarski_side.zf".
include "tarski_out.zf".
include "tarski_lea.zf".

#19_19
assert forall (X Y A B P : point). X!=Y => col X Y P => col A B P => (os X Y A B <=> (out P A B && ~col X Y A)).

#111_16
assert forall (A B C A1 B1 C1 : point). per A B C => A!=B => C!=B => per A1 B1 C1 => A1!=B1 => C1!=B1 => congA A B C A1 B1 C1.

#111_25
assert forall (P A B C A1 C1 P1 : point). inAngle P A B C => out B A1 A => out B C1 C => out B P P1 => inAngle P1 A1 B C1.

#111_31_2
assert forall (A B C D E F : point). A!=B => C!=B => D!=E => F!=E => bet D E F =>leA A B C D E F.

#conga_preserves_lta
assert forall (A B C D E F A1 B1 C1 D1 E1 F1 : point). congA A B C A1 B1 C1 => congA D E F D1 E1 F1 => ltA A B C D E F => ltA A1 B1 C1 D1 E1 F1.

#lea_nlta
assert forall (A B C D E F : point). leA A B C D E F => ~ltA D E F A B C.

#one_or_two_sides
assert forall (A B X Y : point). ~col X A B => ~col Y A B => ts A B X Y || os A B X Y.

#out_one_side
assert forall (A B X Y : point). (~col A B X || ~col A B Y) => out A X Y => os A B X Y.

#one_side_transitivity
assert forall (P Q A B C : point). os P Q A B => os P Q B C => os P Q A C.


#per_col
assert forall (A B C D : point). B!=C => per A B C =>  col B C D => per A B D.

#perp_not_col
assert forall (A B P : point). perp A B P A => ~col A B P.

goal forall (P A O B : point). os O A P B => acute A O P => perp O A B O => os O B A P.
