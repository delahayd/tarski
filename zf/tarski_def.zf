# $Id$

include "tarski.zf".

val col : point -> point -> point -> prop.
val ofsc : point -> point -> point -> point -> point -> point -> point -> point -> prop.
val cong_3 : point -> point -> point -> point -> point -> point -> prop.
val bet_4 : point->point->point->point->prop.
val betS : point->point->point->prop.
val ifsc : point -> point -> point -> point -> point -> point -> point -> point -> prop.
val fsc : point -> point -> point -> point -> point -> point -> point -> point -> prop.
val le : point->point->point->point->prop.
val lt : point->point->point->point->prop.
val ge : point->point->point->point->prop.
val gt : point->point->point->point->prop.
val out : point->point->point->prop.
val midpoint : point->point->point->prop.
val per : point->point->point->prop.
val perp_at : point->point->point->point->point->prop.
val perp : point->point->point->point->prop.
val ts : point->point->point->point->prop.
val reflectP : point->point->point->prop.
val os : point->point->point->point->prop.
val inAngle : point->point->point->point->prop.
val coplanar : point->point->point->point->prop.
val reflectL_at : point->point->point->point->point->prop.
val reflectL : point->point->point->point->prop.
val reflect : point->point->point->point->prop.
val congA : point->point->point->point->point->point->prop.
val leA : point->point->point->point->point->point->prop.
val ltA : point->point->point->point->point->point->prop.
val gtA : point->point->point->point->point->point->prop.
val acute : point->point->point->prop.
val obtuse : point->point->point->prop.
val geA : point->point->point->point->point->point->prop.
val par : point->point->point->point->prop.
val par_strict : point->point->point->point->prop.
val inter : point->point->point->point->point->prop.
val tarski_s_parallel_postulate : prop.
val decidability_of_intersection : prop.
val sumA : point->point->point->point->point->point->point->point->point->prop.
val triSumA : point->point->point->point->point->point->prop.
val saccheri : point->point->point->point->prop.
val hypothesis_of_obtuse_saccheri_quadrilaterals : prop.
val perp2 : point->point->point->point->point->prop.
val q_cong : (point->point->prop)->prop.
val len : point->point->(point->point->prop)->prop.
val q_cong_null : (point->point->prop)->prop.
val eqL : (point->point->prop)->(point->point->prop)->prop.
val q_congA : (point->point->point->prop)->prop.
val ang : point->point->point->(point->point->point->prop)->prop.
val eqA : (point->point->point->prop)->(point->point->point->prop)->prop.
val q_congA_acute : (point->point->point->prop)->prop.
val ang_acute : point->point->point->(point->point->point->prop)->prop.
val q_congA_nNull : (point->point->point->prop)->prop.
val q_congA_nFlat : (point->point->point->prop)->prop.
val q_congA_null : (point->point->point->prop)->prop.
val q_congA_null_acute : (point->point->point->prop)->prop.
val is_null_anga : (point->point->point->prop)->prop.
val q_congA_nNull_acute : (point->point->point->prop)->prop.
val ang_flat : (point->point->point->prop)->prop.
val lcos : (point->point->prop)->(point->point->prop)->(point->point->point->prop)->prop.
val eq_lcos : (point->point->prop)->(point->point->point->prop)->(point->point->prop)->(point->point->point->prop)->prop.
val lcos2 : (point->point->prop)->(point->point->prop)->(point->point->point->prop)->(point->point->point->prop)->prop.
val eq_lcos2 : (point->point->prop)->(point->point->point->prop)->(point->point->point->prop)->(point->point->prop)->(point->point->point->prop)->(point->point->point->prop)->prop.
val lcos3 : (point->point->prop)->(point->point->prop)->(point->point->point->prop)->(point->point->point->prop)->(point->point->point->prop)->prop.
val eq_lcos3 : (point->point->prop)->(point->point->point->prop)->(point->point->point->prop)->(point->point->point->prop)->(point->point->prop)->(point->point->point->prop)->(point->point->point->prop)->(point->point->point->prop)->prop.
val ar1 : point->point->point->point->point->prop.
val ar2 : point->point->point->point->point->point->prop.
val pj : point->point->point->point->prop.
val sum : point->point->point->point->point->point->prop.
val proj : point->point->point->point->point->point->prop.
val sump : point->point->point->point->point->point->prop.
val prod : point->point->point->point->point->point->prop.
val prodp : point->point->point->point->point->point->prop.
val opp : point->point->point->point->point->prop.
val plg : point->point->point->point->prop.
val parallelogram_flat : point->point->point->point->prop.
val diff : point->point->point->point->point->point->prop.
val sum3 : point->point->point->point->point->point->point->prop.
val sum4 : point->point->point->point->point->point->point->point->prop.
val sum22 : point->point->point->point->point->point->point->point->prop.
val ps : point->point->point->prop.
val ng : point->point->point->prop.
val ltP : point->point->point->point->point->prop.
val leP : point->point->point->point->point->prop.
val length : point->point->point->point->point->point->prop.
val is_length : point->point->point->point->point->point->prop.
val sumg : point->point->point->point->point->point->prop.
val prodg : point->point->point->point->point->point->prop.
val cs : point->point->point->point->point->prop.
val projp : point->point->point->point->prop.
val cd : point->point->point->point->point->point->point->point->prop.
val cong_4 : point->point->point->point->point->point->point->point->prop.
val cong_5 : point->point->point->point->point->point->point->point->point->point->prop.
val sams : point->point->point->point->point->point->prop.
val ar2_4 : point->point->point->point->point->point->point->prop.


rewrite
  forall (A B C : point). col A B C <=> bet A B C || bet B C A || bet C A B.

rewrite
	forall (A B C D A1 B1 C1 D1 : point). ofsc A B C D A1 B1 C1 D1 <=> bet A B C && bet A1 B1 C1 && cong A B A1 B1 && cong B C B1 C1 && cong A D A1 D1 && cong B D B1 D1.

rewrite
	forall (A B C A1 B1 C1 : point). cong_3 A B C A1 B1 C1 <=> cong A B A1 B1 && cong A C A1 C1 && cong B C B1 C1.

rewrite
	forall (A1 A2 A3 A4 : point). bet_4 A1 A2 A3 A4 <=> bet A1 A2 A3 && bet A2 A3 A4 && bet A1 A3 A4 && bet A1 A2 A4.

rewrite
	forall (A B C : point). betS A B C <=> bet A B C && A!=B && B!=C.

rewrite
	forall (A B C D A1 B1 C1 D1 : point). ifsc A B C D A1 B1 C1 D1 <=> bet A B C && bet A1 B1 C1 && cong A C A1 C1 && cong B C B1 C1 && cong A D A1 D1 && cong C D C1 D1.

rewrite
	forall (A B C D A1 B1 C1 D1 : point). fsc A B C D A1 B1 C1 D1 <=> col A B C && cong_3 A B C A1 B1 C1 && cong A D A1 D1 && cong B D B1 D1.

rewrite
	forall (A B C D : point). le A B C D <=> (exists (E : point). bet C E D && cong A B C E).

rewrite
	forall (A B C D : point). lt A B C D <=> le A B C D && ~cong A B C D.

rewrite
	forall (A B C D : point). ge A B C D <=> le C D A B.

rewrite
	forall (A B C D : point). gt A B C D <=> lt C D A B.

rewrite
	forall (P A B : point). out P A B <=> A!=P && B!=P && (bet P A B || bet P B A).


rewrite
	forall (M A B : point). midpoint M A B <=> bet A M B && cong A M M B.

rewrite
	forall (A B C : point). per A B C <=> (exists (C1 : point). midpoint B C C1 && cong A C A C1).

rewrite
	forall (X A B C D : point). perp_at X A B C D <=> ((forall (U V : point). col U A B => col V C D => per U X V) && A!=B && C!=D && col X A B && col X C D).

rewrite
	forall (A B C D : point). perp A B C D <=> (exists (X : point). perp_at X A B C D). 

rewrite
	forall (A B P Q : point). ts A B P Q <=> ~col P A B && ~col Q A B && (exists (T : point). col T A B && bet P T Q).


rewrite
	forall (A A1 C : point). reflectP A A1 C <=> midpoint C A1 A.

rewrite
	forall (A B P Q : point). os A B P Q <=> (exists (R : point). ts A B P R && ts A B Q R).

rewrite
	forall (P A B C : point). inAngle P A B C <=> (A!=B && C!=B && P!=B && (exists (X : point). bet A X C && (X=B || out B X P))).

rewrite
	forall (A B C D : point). coplanar A B C D <=> (exists (X : point). (col A B X && col C D X) || (col A C X && col B D X) || (col A D X && col B C X)).

rewrite
	forall (M P1 P A B : point). reflectL_at M P1 P A B <=> (midpoint M P P1 && col A B M) && (perp A B P P1 || P=P1).

rewrite
	forall (P1 P A B : point). reflectL P1 P A B <=> (exists (X : point). midpoint X P P1 && col A B X) && (perp A B P P1 || P=P1).

rewrite
	forall (P1 P A B : point). reflect P1 P A B <=> (A!=B && reflectL P1 P1 A B) || (A=B && midpoint A P P1).

rewrite
	forall (A B C D E F : point). congA A B C D E F <=> (A!=B && C!=B && D!=E && F!=E && (exists (A1 C1 D1 F1 : point). bet B A A1 && cong A A1 E D && bet B C C1 && cong C C1 E F && bet E D D1 && cong D D1 B A && bet E F F1 && cong F F1 B C && cong A1 C1 D1 F1)).

rewrite
	forall (A B C D E F : point). leA A B C D E F <=> (exists (P : point). inAngle P D E F && congA A B C D E P).

rewrite
	forall (A B C D E F : point). ltA A B C D E F <=> (leA A B C D E F && ~congA A B C D E F).

rewrite
	forall (A B C D E F : point). gtA A B C D E F <=> ltA D E F A B C. 

rewrite
	forall (A B C : point). acute A B C <=> (exists (A1 B1 C1 : point). per A1 B1 C1 && ltA A B C A1 B1 C1).

rewrite
	forall (A B C : point). obtuse A B C <=> (exists (A1 B1 C1 : point). per A1 B1 C1 && gtA A B C A1 B1 C1).

rewrite
	forall (A B C D E F : point). geA A B C D E F <=> leA D E F A B C.

rewrite
	forall (A B C D : point). par_strict A B C D <=> A!=B && C!=D && coplanar A B C D && ~(exists (X : point). col X A B && col X C D).

rewrite
	forall (A B C D : point). par A B C D <=> par_strict A B C D || (A!=B && C!=D && col A C D && col B C D).

rewrite
	forall (A1 A2 B1 B2 X : point). inter A1 A2 B1 B2 X <=> (exists (P : point). col P B1 B2 && ~col P A1 A2) && col A1 A2 X && col B1 B2 X.


rewrite
	tarski_s_parallel_postulate <=> (forall (A B C D T : point). bet A D T => bet B C D => A!=D => (exists (X Y : point). bet A B X && bet A C Y && bet X T Y)).

rewrite
	decidability_of_intersection <=> (forall (A B C D : point). (exists (I : point). col I A B && col I C D) || ~(exists (I : point). col I A B && col I C D)).

rewrite
	forall (A B C D E F G H I : point). sumA A B C D E F G H I <=> (exists (J : point). congA C B J D E F && ~os B C A J && congA A B J G H I).

rewrite
	forall (A B C D E F : point). triSumA A B C D E F <=> (exists (G H I : point). sumA A B C B C A G H I && sumA G H I C A B D E F).

rewrite
	forall (A B C D : point). saccheri A B C D <=> per B A D && per A D C && cong A B C D && os A D B C.

rewrite
	hypothesis_of_obtuse_saccheri_quadrilaterals <=> (forall (A B C D : point). saccheri A B C D => obtuse A B C).

rewrite
	forall (A B C D P : point). perp2 A B C D P <=> (exists (X Y : point). col P X Y && perp X Y A B && perp X Y C D).

rewrite
	forall (l : point->point->prop). q_cong l <=> (exists (A B : point). (forall (X Y : point). cong A B X Y <=> l X Y)).

rewrite
	forall (A B : point) (l : point->point->prop). len A B l <=> q_cong l && l A B.

rewrite
	forall (l : point->point->prop). q_cong_null l <=> q_cong l && (exists (A : point). l A A).


rewrite
	forall (l1 l2 : point->point->prop). eqL l1 l2 <=> (forall (A B : point). l1 A B <=> l2 A B).

rewrite
	forall (a : point->point->point->prop). q_congA a <=> (exists (A B C : point). A!=B && C!=B && (forall (X Y Z : point). congA A B C X Y Z <=> a X Y Z)).

rewrite
	forall (A B C : point) (a : point->point->point->prop). ang A B C a <=> q_congA a && a A B C.

rewrite
	forall (a1 a2 : point->point->point->prop). eqA a1 a2 <=> (forall (A B C : point). a1 A B C <=> a2 A B C).

rewrite
	forall (a : point->point->point->prop). q_congA_acute a <=> (exists (A B C : point). acute A B C && (forall (X Y Z : point). congA A B C X Y Z <=> a X Y Z)).

rewrite
	forall (A B C : point) (a : point->point->point->prop). ang_acute A B C a <=> q_congA_acute a && a A B C.

rewrite
	forall (a : point->point->point->prop). q_congA_nNull a <=> q_congA a && (forall (A B C : point). a A B C => ~out B A C).

rewrite
	forall (a : point->point->point->prop). q_congA_nFlat a <=> q_congA a && (forall (A B C : point). a A B C => ~bet A B C).

rewrite
	forall (a : point->point->point->prop). q_congA_null a <=> q_congA a && (forall (A B C : point). a A B C => out B A C).

rewrite 
	forall (a : point->point->point->prop). q_congA_null_acute a <=> q_congA_acute a && (forall (A B C : point). a A B C => out B A C).

rewrite
	forall (a : point->point->point->prop). is_null_anga a <=> q_congA_acute a && (exists (A B C : point). a A B C && out B A C).

rewrite
	forall (a : point->point->point->prop). q_congA_nNull_acute a <=> q_congA_acute a && (forall (A B C : point). a A B C => ~out B A C).


rewrite
	forall (a : point->point->point->prop). ang_flat a <=> q_congA a && (forall (A B C : point). a A B C => bet A B C).

rewrite
	forall (lb lc : point->point->prop) (a : point->point->point->prop). lcos lb lc a <=> q_cong lb && q_cong lc && q_congA_acute a && (exists (A B C : point). per C B A && lb A B && lc A C && a B A C).

rewrite
	forall (la lb : point->point->prop) (a b : point->point->point->prop). eq_lcos la a lb b <=> (exists (lp : point->point->prop). lcos lp la a && lcos lp lb b).

rewrite
	forall (lp l : point->point->prop) (a b : point->point->point->prop). lcos2 lp l a b <=> (exists (la : point->point->prop). lcos la l a && lcos lp la b).

rewrite
	forall (l1 l2 : point->point->prop) (a b c d : point->point->point->prop). eq_lcos2 l1 a b l2 c d <=> (exists (lp : point->point->prop). lcos2 lp l1 a b && lcos2 lp l2 c d).

rewrite
	forall (lp l : point->point->prop) (a b c : point->point->point->prop). lcos3 lp l a b c <=> (exists (la lab : point->point->prop). lcos la l a && lcos lab la b && lcos lp lab c).

rewrite
	forall (l1 l2 : point->point->prop) (a b c d e f : point->point->point->prop). eq_lcos3 l1 a b c l2 d e f <=> (exists (lp : point->point->prop). lcos3 lp l1 a b c && lcos3 lp l2 d e f).

rewrite
	forall (A B C D : point). pj A B C D <=> par A B C D || C=D.

rewrite
	forall (O E A B C : point). ar1 O E A B C <=> O!=E && col O E A && col O E B && col O E C.

rewrite
	forall (O E E1 A B C : point). ar2 O E E1 A B C <=> ~col O E E1 && col O E A && col O E B && col O E C.

rewrite
	forall (O E E1 A B C : point). sum O E E1 A B C <=> ar2 O E E1 A B C && (exists (A1 C1 : point). pj E E1 A A1 && col O E1 A1 && pj O E A1 C1 && pj O E1 B C1 && pj E1 E C1 C).

rewrite
	forall (P Q A B X Y : point). proj P Q A B X Y <=> A!=B && X!=Y && ~par A B X Y && (par P Q X Y || P=Q).

rewrite
	forall (O E E1 A B C : point). sump O E E1 A B C <=> col O E A && col O E B && (exists (A1 C1 P1 : point). proj A A1 O E1 E E1 && par O E A1 P1 && proj B C1 A1 P1 O E1 && proj C1 C O E E E1).

rewrite
	forall (O E E1 A B C : point). prod O E E1 A B C <=> ar2 O E E1 A B C && (exists (B1 : point). pj E E1 B B1 && col O E1 B1 && pj E1 A B1 C).

rewrite
	forall (O E E1 A B C : point). prodp O E E1 A B C <=> col O E A && col O E B && (exists (B1 : point). proj B B1 O E1 E E1 && proj B1 C O E A E1).

rewrite
	forall (O E E1 A B : point). opp O E E1 A B <=> sum O E E1 B A O.

rewrite
	forall (A B C D : point). plg A B C D <=> (A!=C || B!=D) && (exists (M : point). midpoint M A C && midpoint M B D).

rewrite
	forall (A B A1 B1 : point). parallelogram_flat A B A1 B1 <=> col A B A1 && col A B B1 && cong A B A1 B1 && cong A B1 A1 B && (A!=A1 || B!=B1).

rewrite
	forall (O E E1 A B C : point). diff O E E1 A B C <=> (exists (B1 : point). opp O E E1 B B1 && sum O E E1 A B1 C).

rewrite
	forall (O E E1 A B C S : point). sum3 O E E1 A B C S <=> (exists (AB : point). sum O E E1 A B AB && sum O E E1 AB C S).

rewrite
	forall (O E E1 A B C D S : point). sum4 O E E1 A B C D S <=> (exists (ABC : point). sum3 O E E1 A B C ABC && sum O E E1 ABC D S).

rewrite
	forall (O E E1 A B C D S : point). sum22 O E E1 A B C D S <=> (exists (AB CD : point). sum O E E1 A B AB && sum O E E1 C D CD && sum O E E1 AB CD S).

rewrite
	forall (O E A : point). ps O E A <=> out O A E.

rewrite
	forall (O E A : point). ng O E A <=> A!=O && E!=O && bet A O E.

rewrite
	forall (O E E1 A B : point). ltP O E E1 A B <=> (exists (D : point). diff O E E1 B A D && ps O E D).

rewrite
	forall (O E E1 A B : point). leP O E E1 A B <=> A=B || ltP O E E1 A B.

rewrite
	forall (O E E1 A B L : point). length O E E1 A B L <=> O!=E && col O E L && leP O E E1 O L && cong O L A B.

rewrite
	forall (O E E1 A B L : point). is_length O E E1 A B L <=> length O E E1 A B L || (O=E && O=L).

rewrite
	forall (O E E1 A B C : point). sumg O E E1 A B C <=> sum O E E1 A B C ||(~ar2 O E E1 A B B && C=O).

rewrite
	forall ( O E E1 A B C : point). prodg O E E1 A B C <=> prod O E E1 A B C || (~ar2 O E E1 A B B && C=O).

rewrite
	forall (O E S U1 U2 : point). cs O E S U1 U2 <=> O!=E && cong O E S U1 && cong O E S U2 && per U1 S U2.

rewrite
	forall (P Q A B : point). projp P Q A B <=> A!=B && ((col A B Q && perp A B P Q) || (col A B P && P=Q)).

rewrite
	forall (O E S U1 U2 P X Y : point). cd O E S U1 U2 P X Y <=> cs O E S U1 U1 && coplanar P S U1 U2 && (exists (PX : point). projp P PX S U1 && cong_3 O E X S U1 PX) && (exists (PY : point). projp P PY S U2 && cong_3 O E Y S U2 PY).

rewrite
	forall (P1 P2 P3 P4 Q1 Q2 Q3 Q4 : point). cong_4 P1 P2 P3 P4 Q1 Q2 Q3 Q4 <=> cong P1 P2 Q1 Q2 && cong P1 P3 Q1 Q3 && cong P1 P4 Q1 Q4 && cong P2 P3 Q2 Q3 && cong P2 P4 Q2 Q4 && cong P3 P4 Q3 Q4.

rewrite
	forall (P1 P2 P3 P4 P5 Q1 Q2 Q3 Q4 Q5 : point). cong_5 P1 P2 P3 P4 P5 Q1 Q2 Q3 Q4 Q5 <=> cong P1 P2 Q1 Q2 && cong P1 P3 Q1 Q3 && cong P1 P4 Q1 Q4 && cong P1 P5 Q1 Q5 && cong P2 P3 Q2 Q3 && cong P2 P4 Q2 Q4 && cong P2 P5 Q2 Q5 && cong P3 P4 Q3 Q4 && cong P3 P5 Q3 Q5 && cong P4 P5 Q4 Q5.


rewrite
	forall (A B C D E F : point). sams A B C D E F <=> A!=B && (out E D F 
|| ~bet A B C) && (exists (J : point). congA C B J D E F && ~os B C A J && ~ts A B C J).

rewrite
	forall (O E E1 A B C D : point). ar2_4 O E E1 A B C D <=> ~col O E E1 && col O E A && col O E B && col O E C && col O E D.