# $Id$

include "tarski_def.zf".
include "tarski_out.zf".
include "tarski_col.zf".
include "tarski_col_bis.zf".

#111_24
assert forall (P A B C : point). inAngle P A B C => inAngle P C B A.

#111_25
assert forall (P A B C A1 C1 P1 : point). inAngle P A B C => out B A1 A => out B C1 C => out B P P1 => inAngle P1 A1 B C1.

#111_30
assert forall (A B C D E F A1 B1 C1 D1 E1 F1 : point). leA A B C D E F => congA A B C A1 B1 C1 => congA D E F D1 E1 F1 => leA A1 B1 C1 D1 E1 F1.

#111_31_1
assert forall (A B C D E F : point). out B A C => D!=E => F!=E => leA A B C D E F.


#acute_col_perp_out
assert forall (A B C A1 : point). acute A B C => col B C A1 => perp B C A A1 => out B A1 C.

#acute_lea_acute
assert forall (A B C D E F : point). acute D E F => leA A B C D E F => acute A B C.

#acute_sym
assert forall (A B C : point). acute A B C => acute C B A.

#angle_bissector
assert forall (A B C : point). A!=B => C!=B => (exists (P : point). inAngle P A B C && congA P B A P B C).

#col_conga_col
assert forall (A B C D E F : point). col A B C => congA A B C D E F => col D E F.

#Col_dec
assert forall (A B C : point). col A B C || ~col A B C.

#col_in_angle_out
assert forall (A B C P : point). col B A P => ~bet A B C => inAngle P A B C => out B A P.

#col_one_side_out
assert forall (A B X Y : point). col A X Y => os A B X Y => out A X Y.

#conga2_col
assert forall (A B C P P1 : point). ~out B A C => congA P B A P B C => congA P1 B A P1 B C => col B P P1.

#conga_inangle_per_acute
assert forall (A B C P : point). per A B C => inAngle P A B C => congA P B A P B C => acute A B P.

#in_angle_one_side
assert forall (A B C P : point). ~col A B C => ~col B A P => inAngle P A B C => os A B P C.

#in_angle_two_sides
assert forall (A B C P : point). ~col B A P => ~col B C P => inAngle P A B C => ts P B A C.

#ncol_conga_ncol
assert forall (A B C D E F : point). ~col A B C => congA A B C D E F => ~col D E F.

#one_or_two_sides
assert forall (A B X Y : point). ~col X A B => ~col Y A B => ts A B X Y || os A B X Y.

#os2_inangle
assert forall (A B C P : point). os B A C P => os B C A P => inAngle P A B C.

#out341_inangle
assert forall (A B C P : point). A!=B => out B C P => inAngle P A B C.

#per_not_col
assert forall (A B C : point). A!=B => B!=C => per A B C => ~col A B C.


goal forall (A B C P T : point). per A B C => inAngle T A B C => congA P B A P B C => per B P T => inAngle P A B C.
