# $Id$

include "tarski_def.zf".
include "tarski_col.zf".
include "tarski_col_bis.zf".
val O : point.
val E : point.
val E1 : point.
#diff_ar2
assert forall (O E E1 A B AMB : point). diff O E E1 A B AMB => ar2 O E E1 A B AMB.

#length_eq_or_opp
assert forall (O E E1 A B L1 L2 : point). length O E E1 A B L1 => diff O E E1 A B L2 => L1=L2 || opp O E E1 L1 L2.

#opp_comm
assert forall (X Y : point). opp O E E1 X Y => opp O E E1 Y X.

#opp_exists
assert forall (A : point). col O E A => (exists (MA : point). opp O E E1 A MA).

#opp_prod
assert forall (O E E1 ME X MX : point). opp O E E1 E ME => opp O E E1 X MX => prod O E E1 X ME MX.

#prod_assoc1
assert forall (O E E1 A B C AB BC ABC : point). prod O E E1 A B AB => prod O E E1 B C BC => (prod O E E1 A BC ABC => prod O E E1 AB C ABC).

#prod_comm
assert forall (O E E1 A B C : point). prod O E E1 A B C => prod O E E1 B A C.

#prod_uniqueness
assert forall (A B C1 C2 : point). prod O E E1 A B C1 => prod O E E1 A B C2 => C1=C2.

goal forall (O E E1 X Y XY XMY XY2 XMY2 : point). col O E X => col O E Y => is_length O E E1 X Y XY => diff O E E1 X Y XMY => prod O E E1 XY XY XY2 => prod O E E1 XMY XMY XMY2 => XY2=XMY2.
