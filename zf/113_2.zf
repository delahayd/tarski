# $Id$

include "tarski_def.zf".
include "tarski_perp.zf".
include "tarski_col.zf".
include "tarski_col_bis.zf".
include "tarski_bet.zf".
include "tarski_prop_bet.zf".
include "tarski_conga.zf".
include "tarski_lea.zf".
include "tarski_side.zf".
include "tarski_out.zf".
include "tarski_cong.zf".


#15_3
assert forall (A B C D : point). bet A B D => bet A C D => bet A B C || bet A C B.

#16_21
assert forall (A B C D P Q : point). ~col A B C => C!=D => col A B P => col A B Q => col C D P => col C D Q => P=Q.

#18_14_2_1b_bis
assert  forall (A B C D X : point). perp A B C D => col X A B => col X C D => perp_at X A B C D.

#18_16_1
assert forall (A B C U X : point). A!=B => col A B X => col A B U => U!=X=> perp A B C X => ~col A B C && per C X U.

#19_5
assert forall (P Q A C R B : point). ts P Q A C => col R P Q => out R A B => ts P Q B C.

#19_8_1
assert forall (P Q A B C : point). ts P Q A C => ts P Q B C => os P Q A B.

#19_8_2
assert forall (P Q A B C : point). ts P Q A C => os P Q A B => ts P Q B C.

#111_22
assert forall (A B C P A1 B1 C1 P1 : point). ((ts B P A C && ts B1 P1 A1 C1) || (os B P A C && os B1 P1 A1 C1)) && congA A B P A1 B1 P1 && congA P B C P1 B1 C1 => congA A B C A1 B1 C1.

#111_24
assert forall (P A B C : point). inAngle P A B C => inAngle P C B A.

#111_30
assert forall (A B C D E F A1 B1 C1 D1 E1 F1 : point). leA A B C D E F => congA A B C A1 B1 C1 => congA D E F D1 E1 F1 => leA A1 B1 C1 D1 E1 F1.

#113_1
assert forall (A B C P Q R : point). ~col A B C => midpoint P B C => midpoint Q A C => midpoint R A B => (exists (X Y : point). perp_at R X Y A B && perp X Y P Q).

#113_2_1
assert forall (A B C D E : point). ts A B C D => per B C A => per B D A => col C D E => perp A E C D => congA C A B D A B => congA B A C D A E && congA B A D C A E && bet C E D.

#angle_construction_1
assert forall (A B C A1 B1 P : point). ~col A B C => ~col A1 B1 P => (exists (C1 : point). congA A B C A1 B1 C1 && os A1 B1 C1 P).

#cong3_conga
assert forall (A B C A1 B1 C1 : point). A!=B => C!=B => cong_3 A B C A1 B1 C1 => congA A B C A1 B1 C1.

#cong_conga_perp
assert forall (A B C P : point). ts B P A C => cong A B C B => congA A B P C B P => perp A C B P.

#conga_or_out_ts
assert forall (A B C C1 : point). congA A B C A B C1 => out B C C1 || ts A B C C1.

#eq_conga_out
assert forall (A B D E F : point). congA A B A D E F => out E D F.

#inangle_one_side
assert forall (A B C P Q : point). ~col A B C => ~col A B P => ~col A B Q => inAngle P A B C => inAngle Q A B C => os A B P Q.

#in_angle_two_sides
assert forall (A B C P : point). ~col B A P => ~col B C P => inAngle P A B C => ts P B A C.


#lea_in_angle
assert forall (A B C P : point). leA A B P A B C => os A B C P => inAngle P A B C.

#not_one_side_two_sides
assert forall (A B X Y : point). A!=B => ~col X A B => ~col Y A B => ~os A B X Y => ts A B X Y.

#one_side_reflexivity
assert forall (P Q A : point). ~col A P Q => os P Q A A.

#one_side_transitivity
assert forall (P Q A B C : point). os P Q A B => os P Q B C => os P Q A C.

#out_conga
assert forall (A B C A1 B1 C1 A0 C0 A2 C2 : point). congA A B C A1 B1 C1 => out B A A0 => out B C C0 => out B1 A1 A2 => out B1 C1 C2 => congA A0 B C0 A2 B1 C2.

#out_one_side_1
assert forall (A B C D X : point). ~col A B C => col A B X => out X C D => os A B C D.

#out_out_one_side
assert forall (A B X Y Z : point). os A B X Y => out A Y Z => os A B X Z.

#perp_col
assert forall (A B C D E : point). A!=E => perp A B C D => col A B E => perp A E C D.

#perp_distinct
assert forall (A B C D : point). perp A B C D => A!=B && C!=D.

#perp_in_perp_bis
assert forall (A B C D X : point). perp_at X A B C D => perp X B C D || perp A X C D.

#perp_in_perp_in_col
assert forall (A B A1 B1 X Y P : point). perp_at P A B X Y => perp_at P A1 B1 X Y => col A B A1.

#perp_not_eq_1
assert forall (A B C D : point). perp A B C D => A!=B.

#perp_perp_col
assert forall (X Y Z A B : point). perp X Y A B => perp X Z A B => col X Y Z.


#symmetric_point_uniqueness
assert forall (A P P1 P2 : point). midpoint P A P1 => midpoint P A P2 => P1=P2.

#triangle_mid_par
assert forall (A B C P Q : point). ~col A B C => midpoint P B C => midpoint Q A C => par_strict A B Q P.

#ts_ts_os
assert forall (A B C D : point). ts A B C D => ts C D A B => os A C B D.

goal forall (A B C D E : point). ts A B C D => per B C A => per B D A => col C D E => perp A E C D => congA B A C D A E && congA B A D C A E && bet C E D.
