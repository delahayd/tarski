# $Id$

include "tarski_def.zf".
include "tarski_col.zf".
include "tarski_col_bis.zf".
include "tarski_perp.zf".
include "tarski_cong.zf".


#17_3
assert forall (M A : point). midpoint M A A => M=A.

#17_13 
assert forall (A P Q P1 Q1 : point). midpoint A P1 P => midpoint A Q1 Q => cong P Q P1 Q1.
#17_17
assert forall (P P1 A B : point). midpoint A P P1 => midpoint B P P1 => A=B.
#17_20
assert forall (M A B : point). col A M B => cong M A M B => A=B || midpoint M A B.
#18_14_1b_bis
assert forall (A B C D X : point). perp A B C D => col X A B => col X C D => perp_at X A B C D.
#19_9
assert forall (P Q A B : point). ts P Q A B => ~os P Q A B.
#110_4
assert forall (A B P P1 : point). reflect P P1 A B => reflect P1 P A B.

#110_4_spec
assert forall (A B P P1 : point). reflectL P P1 A B => reflectL P1 P A B.

#110_10
assert forall (A B P Q P1 Q1 : point). reflect P1 P A B => reflect Q1 Q A B => cong P Q P1 Q1.
#112_6
assert forall (A B C D : point). par_strict A B C D => os A B C D.

#112_9
assert forall (A1 A2 B1 B2 C1 C2 : point). perp A1 A2 C1 C2 => perp B1 B2 C1 C2 =>perp A1 A2 B1 B2.
#one_side_reflexivity
assert forall (P Q A : point). ~col A P Q => os P Q A A.
#one_side_symmetry
assert forall (P Q A B : point). os P Q A B => os P Q B A.

#one_side_transitivity
assert forall (P Q A B C : point). os P Q A B => os P Q B C => os P Q A C.
#per_col
assert forall (A B C D : point). B!=C => per A B C =>  col B C D => per A B D.
#per_not_col
assert forall (A B C : point). A!=B => B!=C => per A B C => ~col A B C.
#perp_col
assert forall (A B C D E : point). A!=E => perp A B C D => col A B E => perp A E C D.

#perp_distinct
assert forall (A B C D : point). perp A B C D => A!=B && C!=D.
#symmetric_point_uniqueness
assert forall (A P P1 P2 : point). midpoint P A P1 => midpoint P A P2 => P1=P2.

#symmetry_preserves_per
assert forall (A P B A1 P1 : point). per B P A => midpoint B A A1 => midpoint B P P1 => per B P1 A1.

goal forall (A B C P Q R : point). ~col A B C => midpoint P B C => midpoint Q A C => midpoint R A B => (exists (X Y : point). perp_at R X Y A B && perp X Y P Q).
