# $Id$

include "tarski_def.zf".
include "tarski_out.zf".
include "tarski_bet.zf".
include "tarski_prop_bet.zf".
include "tarski_le.zf".
include "tarski_cong.zf".
include "tarski_conga.zf".
include "tarski_col.zf".
include "tarski_col_bis.zf".

#15_6
assert forall (A B C D A1 B1 C1 D1 : point). le A B C D => cong A B A1 B1 => cong C D C1 D1 => le A1 B1 C1 D1.

#16_2
assert forall (A B C P : point). A!=P => B!=P => C!=P => bet A P C => (bet B P C <=> out P A B).

#16_7
assert forall (P A B C : point). out P A B => out P B C => out P A C. 

#16_13_1
assert forall (P A B : point). out P A B => le P A P B => bet P A B.

#111_30
assert forall (A B C D E F A1 B1 C1 D1 E1 F1 : point). leA A B C D E F => congA A B C A1 B1 C1 => congA D E F D1 E1 F1 => leA A1 B1 C1 D1 E1 F1.

#111_44_1
assert forall (A B C : point). ~col A B C => (congA B A C B C A <=> cong B A B C).

#111_44_2
assert forall (A B C : point). ~col A B C => (ltA B A C B C A <=> lt B C B A).

#between_cong
assert forall (A B C : point). bet A C B => cong A C A B => C=B.

#conga_lea
assert forall (A B C D E F : point). congA A B C D E F => leA A B C D E F.

#conga_preserves_lta
assert forall (A B C D E F A1 B1 C1 D1 E1 F1 : point). congA A B C A1 B1 C1 => congA D E F D1 E1 F1 => ltA A B C D E F => ltA A1 B1 C1 D1 E1 F1.

#le3456_lt_lt
assert forall (A B C D E F : point). lt A B C D => le C D E F => lt A B E F.

#lea123456_lta_lta
assert forall (A B C D E F G H I : point). leA A B C D E F => ltA D E F G H I => ltA A B C G H I.

#lt_comm
assert forall (A B C D : point). lt A B C D => lt B A D C.

#lta_lea
assert forall (A B C D E F : point). ltA A B C D E F => leA A B C D E F.

#not_bet_out
assert forall (A B C : point). col A B C => ~bet A B C => out B A C.

#out_conga
assert forall (A B C A1 B1 C1 A0 C0 A2 C2 : point). congA A B C A1 B1 C1 => out B A A0 => out B C C0 => out B1 A1 A2 => out B1 C1 C2 => congA A0 B C0 A2 B1 C2.

goal forall (A B C D : point). bet A B D => A!=D => D!=B => le A C B C => lt D C B C.
