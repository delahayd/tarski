# $Id$

include "tarski_def.zf".
include "tarski_col.zf".
include "tarski_col_bis.zf".
include "tarski_perp.zf".
include "tarski_bet.zf".
include "tarski_prop_bet.zf".

#16_6
assert forall (P A B : point). out P A B => out P B A.

#16_7
assert forall (P A B C : point). out P A B => out P B C => out P A C.

#17_2
assert forall (M A B : point). midpoint M A B => midpoint M B A.

#18_6
assert forall (A B C A1 : point). per A B C => per A1 B C => bet A C A1 => B=C.

#18_2
assert forall (A B C : point). per A B C => per C B A.

#18_24
assert forall (A B P Q R T : point). perp P A A B => perp Q B A B => col A B T => bet P T Q => bet B R Q => cong A P B R => (exists (X : point). midpoint X A B && midpoint X P R).

#19_2
assert forall (A B P Q : point). ts A B P Q => ts A B Q P.

#19_3
assert forall (P Q A C M R B : point). ts P Q A C => col M P Q => midpoint M A C => col R P Q => out R A B => ts P Q B C.

#19_4_1
assert forall (P Q A C R S M : point). ts P Q A C => col R P Q => perp P Q A R => col S P Q => perp P Q C S => midpoint M R S => (forall (U C1 : point). midpoint M U C1 => (out R U A <=> out S C C1)).

#col_preserves_two_sides
assert forall (A B C D X Y : point). C!=D => col A B C => col A B D => ts A B X Y => ts C D X Y.

#mid_two_sides
assert forall (A B M X Y : point). midpoint M A B => ~col A B X => midpoint M X Y => ts A B X Y.

#out_out_two_sides
assert forall (A B X Y U V I : point). A!=B => ts A B X Y => col I A B => col I X Y => out I X U => col I Y V => ts A B U V.

#perp_col2
assert forall (A B C D X Y : point). perp A B X Y => C!=D => col A B C => col A B D => perp C D X Y.

#perp_distinct
assert forall (A B C D : point). perp A B C D => A!=B && C!=D.

goal forall (P Q A C R S U V : point). le S C R A => ts P Q A C => col R P Q => perp P Q A R => col S P Q => perp P Q C S => out R U A => out S V C => ts P Q U V.
