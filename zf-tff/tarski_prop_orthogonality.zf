# $Id$

include "tarski_def.zf".

#13_17
assert forall (A B C A1 B1 P : point). bet A B C => bet A1 B1 C => bet A P A1 => (exists (Q : point). bet P Q C && bet B Q B1).

#14_2
assert forall (A B C D A1 B1 C1 D1 : point). ifsc A B C D A1 B1 C1 D1 => cong B D B1 D1.

#14_3
assert forall (A B C A1 B1 C1 : point). bet A B C => bet A1 B1 C1 => cong A C A1 C1 => cong B C B1 C1 => cong A B A1 B1.

#14_3_1
assert forall (A B C A1 B1 C1 : point). bet A B C => bet A1 B1 C1 => cong A B A1 B1 => cong A C A1 C1 => cong B C B1 C1.

#14_19
assert forall (A B C C1 : point). bet A C B => cong A C A C1 => cong B C B C1 => C=C1.

#17_3
assert forall (M A : point). midpoint M A A => M=A.

#17_2
assert forall (M A B : point). midpoint M A B => midpoint M B A.

#17_3_2
assert forall (A : point). midpoint A A A.

#17_9
assert forall (P Q A X : point). midpoint A P X => midpoint A Q X => P=Q.

#17_13 
assert forall (A P Q P1 Q1 : point). midpoint A P1 P => midpoint A Q1 Q => cong P Q P1 Q1.

#17_15
assert forall (P Q R P1 Q1 R1 A : point). midpoint A P P1 => midpoint A Q Q1 => midpoint A R R1 => bet P Q R => bet P1 Q1 R1.

#17_17
assert forall (P P1 A B : point). midpoint A P P1 => midpoint B P P1 => A=B.

#17_20
assert forall (M A B : point). col A M B => cong M A M B => A=B || midpoint M A B.

#17_21
assert forall (A B C D P : point). ~col A B C => B!=D => cong A B C D => cong B C D A => col A P C => col B P D => midpoint P A C && midpoint P B D.

#17_22
assert  forall (A1 A2 B1 B2 C M1 M2 : point). bet A1 C A2 => bet B1 C B2 => cong C A1 C B1 => cong C A2 C B2 => midpoint M1 A1 B1 => midpoint M2 A2 B2 => bet M1 C M2.

#17_25
assert  forall (A B C : point). cong C A C B => (exists (X : point). midpoint X A B).

#18_3
assert forall (A B C A1 : point). per A B C => A!=B=> col B A A1 => per A1 B C. 

#18_8
assert forall (A B : point). per A B A => A=B.

#18_9
assert forall (A B C : point). per A B C => col A B C => (A=B || C=B).

#18_10
assert forall (A B C A B C A1 B1 C1 : point). per A B C => cong_3 A B C A1 B1 C1 => per A1 B1 C1.

#18_14_2_1a
assert forall (X A B C D : point). perp_at X A B C D => perp A B C D.

#18_14_2_1b
assert forall (X A B C D Y : point). perp_at X A B C D => col Y A B => col Y C D => X=Y.

#18_14_1b_bis
assert forall (A B C D X : point). perp A B C D => col X A B => col X C D => perp_at X A B C D.

#18_14_3
assert forall (A B C D X Y : point). perp_at X A B C D => perp_at Y A B C D => X=Y.

#18_15_1
assert forall (A B C X : point). A!=B => col A B X => perp A B C X => perp_at X A B C X.

#Col_dec
assert forall (A B C : point). col A B C || ~col A B C.

#col_transitivity_1
assert forall (P Q A B : point). P!=Q => col P Q A => col P Q B => col P A B.

#col_transitivity_2
assert forall (P Q A B : point). P!=Q => col P Q A => col P Q B => col Q A B.

#col13
assert forall (A B C D A1 B1 C1 D1 : point). ifsc A B C D A1 B1 C1 D1 => cong B D B1 D1.

#not_col_exists
assert forall (A B : point). A!=B => (exists (C : point). ~col A B C).

#Per_dec
assert forall (A B C : point). per A B C || ~per A B C.

#per_not_col
assert forall (A B C : point). A!=B => B!=C => per A B C => ~col A B C.

#per_not_colp
assert forall (A B P R : point). A!=B => A!=P => B!=R => per B A P => per A B R =>~col P A R.

#perp_distinct
assert forall (A B C D : point). perp A B C D => A!=B && C!=D.

#perp_in_perp_bis
assert forall (A B C D X : point). perp_at X A B C D => perp X B C D || perp A X C D.

#perp_in_col_perp_in
assert forall (A B C D E P : point). C!=E => col C D E => perp_at P A B C D => perp_at P A B C E.

#perp_col
assert forall (A B C D E : point). A!=E => perp A B C D => col A B E => perp A E C D.

#perp_cong
assert forall (A B P R X : point). A!=B => A!=P => perp A B P A => perp A B R B => cong A P B R => col A B X => bet P X R => cong A R P B.

#perp_not_eq_2
assert forall (A B C D : point). perp A B C D => C!=D.

#symmetric_point_construction
assert forall (P A : point). (exists (P1 : point). midpoint A P P1).

#symmetric_point_uniqueness
assert forall (A P P1 P2 : point). midpoint P A P1 => midpoint P A P2 => P1=P2.
