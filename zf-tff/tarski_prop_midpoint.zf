# $Id$

include "tarski_def.zf".

#14_2
assert forall (A B C D A1 B1 C1 D1 : point). ifsc A B C D A1 B1 C1 D1 => cong B D B1 D1.

#14_3
assert forall (A B C A1 B1 C1 : point). bet A B C => bet A1 B1 C1 => cong A C A1 C1 => cong B C B1 C1 => cong A B A1 B1.

#14_3_1
assert forall (A B C A1 B1 C1 : point). bet A B C => bet A1 B1 C1 => cong A B A1 B1 => cong A C A1 C1 => cong B C B1 C1.
#14_5
assert forall (A B C A1 C1 : point). bet A B C => cong A C A1 C1 => (exists (B1 : point). bet A1 B1 C1 && cong_3 A B C A1 B1 C1).

#14_6
assert forall (A B C A1 B1 C1 : point). bet A B C => cong_3 A B C A1 B1 C1 => bet A1 B1 C1.

#14_13
assert forall (A B C A1 B1 C1 : point). col A B C => cong_3 A B C A1 B1 C1 => col A1 B1 C1.

#14_14
assert forall (A B C A1 B1 : point). col A B C => cong A B A1 B1 => (exists (C1 : point). cong_3 A B C A1 B1 C1).

#14_16
assert forall (A B C D A1 B1 C1 D1 : point). fsc A B C D A1 B1 C1 D1 => A!=B => cong C D C1 D1.

#14_17
assert forall (A B C P Q : point). A!=B => col A B C => cong A P A Q => cong B P B Q => cong C P C Q.

#14_19
assert forall (A B C C1 : point). bet A C B => cong A C A C1 => cong B C B C1 => C=C1.

#15_2
assert forall (A B C D : point). A!=B => bet A B C => bet A B D => bet B C D || bet B D C.

#15_6
assert forall (A B C D A1 B1 C1 D1 : point). le A B C D => cong A B A1 B1 => cong C D C1 D1 => le A1 B1 C1 D1.

#16_13_1
assert forall (P A B : point). out P A B => le P A P B => bet P A B.

#16_21
assert forall (A B C D P Q : point). ~col A B C => C!=D => col A B P => col A B Q => col C D P => col C D Q => P=Q.

#17_3
assert forall (M A : point). midpoint M A A => M=A.

#17_16
assert forall (P Q R S P1 Q1 S1 R1 A : point). midpoint A P P1 => midpoint A Q Q1 => midpoint A R R1 => midpoint A S S1 => cong P Q R S => cong P1 Q1 R1 S1.

#17_20_bis
assert forall (M A B : point). A!=B => col A M B => cong M A M B => midpoint M A B.

#bet_cong_eq
assert forall (A B C D : point). bet A B C => bet A C D => cong B C A D => C=D && A=B.

#bet_neq12_neq
assert forall (A B C : point). bet A B C => A!=B=>A!=C.

#bet2_le2_le
assert forall (O o A B a b : point). bet a o b => bet A O B => le o a O A => le o b O B => le a b A B.

#between_cong
assert forall (A B C : point). bet A C B => cong A C A B => C=B.

#between_equality
assert forall (A B C : point). bet A B C => bet B A C => A=B.

#col13
assert forall (X Y A B C : point). X!=Y => col X Y A => col X Y B => col X Y C => col A B C.

#Col_dec
assert forall (A B C : point). col A B C || ~col A B C.

#col_transitivity_1
assert forall (P Q A B : point). P!=Q => col P Q A => col P Q B => col P A B.

#cong_mid2_cong
assert forall (A M B A1 M1 B1 : point). midpoint M A B => midpoint M1 A1 B1 => cong A M A1 M1 => cong A B A1 B1.

#is_midpoint_id
assert forall (A B : point). midpoint A A B => A=B.

#le_mid2_le12
assert forall (A M B A1 M1 B1 : point). midpoint M A B => midpoint M1 A1 B1 => le A B A1 B1 => le A M A1 M1.

#midpoint_distinct_1
assert forall (I A B : point). A!=B => midpoint I A B => I!=A && I!=B.

#symmetric_point_construction
assert forall (P A : point). exists (P1 : point). midpoint A P P1.

#symmetric_point_uniqueness
assert forall (A P P1 P2 : point). midpoint P A P1 => midpoint P A P2 => P1=P2.
